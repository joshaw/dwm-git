#!/usr/bin/lua
function split(str, sep)
	local t={}
	for s in string.gmatch(str, "([^"..assert(sep).."]+)") do t[#t+1] = s end
	return t
end

function clamp(str, len)
	if #str < len then return str end
	return string.format("%." .. tostring(len) .. "s…", str)
end

function os.capture(cmd)
	local f = assert(io.popen(cmd, 'r'))
	local t = {}
	while true do
		local line = f:read("*line")
		if line == nil then
			break
		end
		t[#t+1] = line
	end
	return t
end

function mpd()
	local mpd_output = os.capture("mpc status")

	if mpd_output[2] == nil then
		return "■"
	end

	local status_line = split(mpd_output[2], " ")
	local status = ""
	if status_line[1] == "[playing]" then
		status = "▶"
	elseif status_line[1] == "[paused]" then
		status = "∥"
	end
	return ("%s   %s  %s  %s"):format(
		status,
		clamp(mpd_output[1], 80),
		status_line[4],
		status_line[2]
	)
end

function volume()
	for i, line in ipairs(os.capture("amixer -M sget Master")) do
		local perc = line:match("%[([0-9]+%%)%]")
		if perc then
			if line:sub(-5) == "[off]" then
				return "mute"
			end
			return perc
		end
	end
end

function netdevs()
	local t = {}
	for i, line in ipairs(os.capture("networkctl list --no-legend")) do
		local fields = split(line, " ")
		if fields[4] == "routable" then
			table.insert(t, fields[2])
		end
	end
	return table.concat(t, "/")
end

function temp()
	local file = "/sys/class/hwmon/hwmon1/temp1_input"
	local f = io.open(file)
	local temp = f:read("*number") / 1000
	f:close()
	return ("%.0f°C"):format(temp)
end

function loadavg()
	local f = io.open("/proc/loadavg")
	local fields = split(f:read("*line"), " ")
	f:close()
	return ("%s/%s/%s"):format(fields[1], fields[2], fields[3])
end

function date()
	return os.date("%a %d %b %I:%M")
end

local s = ("\6   %s   ·\5   %s   ·\4   %s   ·\3   %s   ·\2   %s   ·\1   %s"):format(
	mpd(), volume(), netdevs(), temp(), loadavg(), date())
assert(io.popen("xsetroot -name '" .. s:gsub("'", [['"'"']]) .. "'", 'r'))
