#!/bin/sh
set -eu

log() {
	logger --tag dwm "$*"
}

disconnect() {
	nohup "$@" > /dev/null 2>&1 &
}

status() {
	/etc/dwm/status
}

quit_dwm() {
	action="$(printf 'Lock\nSuspend\nLogout\nReboot\nShutdown\n' | dmenu -p "Action")"
	log "$(echo "$action" | tr 'A-Z' 'a-z')"
	case "$action" in
		Lock) slock ;;
		Suspend) doas /usr/bin/systemctl suspend && slock ;;
		Logout) killall dwm ;;
		Reboot) doas /usr/bin/systemctl reboot ;;
		Shutdown) doas /usr/bin/systemctl poweroff ;;
	esac
}

lock_screen() {
	slock
	log "unlocked"
}

mpd_cmd() {
	mpc "$1" > /dev/null
}

screenshot() {
	scrot \
		--select \
		--silent \
		--freeze \
		--exec 'xclip -selection clipboard -t image/png -i "$f"' \
		"$HOME"'/screenshots/%Y-%m-%d_%H-%M-%S_$wx$h.png'
}

calendar() {
	EXPIRE="$((30 * 1000))"
	HEADER="$(date '+%a %d %b %Y')"
	BODY="$(cal --color=always |
		sed -e '1d' \
			-e '/^\s*$/d' \
			-e 's#\(.....\)$#<i>\1</i>#' \
			-e 's#'$(printf '\033\[7m')'#<u><i><b>#' \
			-e 's#'$(printf '\033\[27m')'#</b></i></u>#')"
	notify-send -t "$EXPIRE" "$HEADER" "<small><tt>$BODY</tt></small>"
}

log_time() {
	LOG_FILE="$HOME/repos/wiki/times/times.txt"
	NEW="$(awk '{line=$0} END {
		last_date = substr(line, 0, 8)
		today = strftime("%Y%m%d")
		if (last_date == today) {
			printf(strftime(", %H%M%S"))
			exit
		}

		last_time = mktime( \
			substr(last_date, 0, 4) " " \
			substr(last_date, 5, 2) " " \
			substr(last_date, 7, 2) " 00 00 00" \
		)
		while (1) {
			last_time += 60*60*24
			new_date = strftime("%Y%m%d", last_time)
			if (new_date == today) {
				break
			}
			printf("\n%s, w     , w     , w     , w     , 1", new_date)
		}
		printf(strftime("\n%Y%m%d, %H%M%S"))
	}' "$LOG_FILE")"
	printf '%s' "$NEW" >> "$LOG_FILE"
}

status_mpd() {
	HEADER="$(mpc -f "%title%" current)"
	BODY="$(mpc -f "<small>from</small> %album%\n<small>by</small> %artist%" current)"
	QUEUE="$(mpc -f "%albumartist% %track% - %title%" playlist)"
	notify-send "$HEADER" "$BODY<br><br>$QUEUE"
}

status_net() {
	EXPIRE="$((30 * 1000))"
	BODY="$(networkctl status --lines 0; echo; networkctl --no-legend)"
	notify-send -t "$EXPIRE" "Network Status" "<small><tt>$BODY</tt></small>"
}

status_up() {
	notify-send "Uptime" "$(uptime --pretty)"
}

status_vol() {
	notify-send "Master Mixer" "$(amixer sget Master | grep '%')"
}

CMD="${1:-""}"

log "$CMD"
case "$CMD" in
	browser) disconnect firefox ;;
	lock) lock_screen ;;
	dmenucmd) dmenu_run ;;
	screenshot) screenshot ;;
	#terminal) disconnect rxvt-unicode ;;
	#terminal) disconnect xfce4-terminal ;;
	terminal) disconnect alacritty ;;
	password) disconnect python3 ~/bin/dmenu-keepassxc.py ;;
	calendar) calendar ;;
	log_time) log_time ;;

	audio_pause) mpd_cmd toggle ;;
	audio_next) mpd_cmd next ;;
	audio_prev) mpd_cmd prev ;;
	audio_info) disconnect python3 ~/bin/dmenu-mpd.py -i ;;

	notif_del) dunstctl close ;;
	notif_last) dunstctl history-pop ;;
	notif_action) dunstctl context ;;

	#vol_up) pactl set-sink-volume "@DEFAULT_SINK@" "+5%" ;;
	#vol_down) pactl set-sink-volume "@DEFAULT_SINK@" "-5%" ;;
	#vol_mute) pactl set-sink-mute "@DEFAULT_SINK@" "toggle" ;;
	vol_up)   amixer --quiet set Master "2%+"; status ;;
	vol_down) amixer --quiet set Master "2%-"; status ;;
	vol_mute) amixer --quiet set Master "toggle"; status ;;

	status-6) status_mpd ; status ;;
	status-5) status_vol ; status ;;
	status-4) status_net ; status ;;
	status-3) status ;;
	status-2) status_up ; status ;;
	status-1) calendar ; status ;;

	quitmenu) quit_dwm ;;
esac
